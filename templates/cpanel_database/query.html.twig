{% extends 'base.html.twig' %}

{% block title %}Gestion de la base de données - {{ dbName }}{% endblock %}

{% block stylesheets %}
{{ parent() }}
<link rel="stylesheet" href="{{ asset('css/database.css') }}">
<style>
    /* Style pour l'éditeur de requêtes */
    .query-editor {
        font-family: monospace;
        min-height: 150px;
        resize: vertical;
    }
</style>
{% endblock %}

{% block page_title %}Gestion de la base de données - {{ dbName }}{% endblock %}
{% block page_subtitle %}Gérez votre base de données MySQL facilement{% endblock %}

{% block body %}
<div class="container">
    <div class="db-card mb-4">
        <div class="db-card-header">
            <h2>Gestion de la base de données - {{ dbName }}</h2>
            <div class="flex space-x-2">
                <a href="{{ path('app_cpanel_database_index') }}" class="db-btn db-btn-secondary db-btn-icon">
                    <i class="fas fa-arrow-left"></i> Retour aux bases de données
                </a>
            </div>
        </div>
        <div class="db-card-body">
            <div class="alert alert-info mb-4">
                <p><i class="fas fa-info-circle"></i> Gérez votre base de données MySQL facilement. Attention : les modifications sont définitives.</p>
            </div>
            
            {% for label, messages in app.flashes %}
                {% for message in messages %}
                    <div class="alert alert-{{ label }} mb-4">
                        {{ message }}
                    </div>
                {% endfor %}
            {% endfor %}
            
            <!-- Mot de passe de la base de données (commun à tous les onglets) -->
            <div class="db-form-section">
                <form action="{{ path('app_cpanel_database_query', {'dbName': dbName}) }}" method="post">
                    <div class="db-form-group">
                        <label for="db_password" class="db-label">Mot de passe de la base de données (optionnel)</label>
                        <div class="flex">
                            <input type="password" id="db_password" name="db_password" class="db-input" placeholder="Entrez le mot de passe de la base de données" value="{{ app.session.get('db_password_' ~ dbName) }}">
                            <button type="submit" name="save_password" class="db-btn db-btn-secondary ms-3 db-btn-icon">
                                <i class="fas fa-save"></i> Enregistrer
                            </button>
                        </div>
                        <p class="db-help-text">Si vous avez créé cette base de données avec un mot de passe spécifique, veuillez le saisir ici. Le mot de passe sera sauvegardé en session pour les requêtes ultérieures.</p>
                        {% if app.session.get('db_password_' ~ dbName) %}
                            <p class="db-help-text" style="color: var(--success-color);"><i class="fas fa-check-circle"></i> Un mot de passe est déjà enregistré pour cette base de données.</p>
                        {% endif %}
                    </div>
                </form>
            </div>
            
            <!-- Onglets -->
            {# <div class="tabs">
                <div class="tab active" data-tab="sql">Requêtes SQL</div>
                <div class="tab" data-tab="create-table">Créer une table</div>
                <div class="tab" data-tab="manage-data">Gérer les données</div>
            </div> #}
            
            <!-- Contenu de l'onglet Requêtes SQL -->
            <div id="tab-sql" class="tab-content active">
                <div class="db-form-section">
                    <h3 class="db-form-header">Exécuter une requête SQL</h3>
                    <form action="{{ path('app_cpanel_database_query', {'dbName': dbName}) }}" method="post">
                        <div class="db-form-group">
                            <label for="query" class="db-label">Requête SQL</label>
                            <textarea id="query" name="query" class="query-editor db-input" placeholder="SELECT * FROM table_name;">{{ query }}</textarea>
                        </div>
                        <input type="hidden" name="db_password" value="{{ app.session.get('db_password_' ~ dbName) }}">
                        <div class="db-form-footer">
                            <div></div>
                            <button type="submit" name="execute_query" class="db-btn db-btn-primary db-btn-icon">
                                <i class="fas fa-play"></i> Exécuter
                            </button>
                        </div>
                    </form>
                </div>
                
                {% if result is defined %}
                    <div class="mt-6">
                        <h3 class="text-xl font-semibold mb-4">Résultats</h3>
                        
                        {% if result.error is defined %}
                            <div class="alert alert-danger">
                                <p><i class="fas fa-exclamation-triangle"></i> Erreur : {{ result.error }}</p>
                            </div>
                        {% elseif result.message is defined %}
                            <div class="alert alert-success">
                                <p><i class="fas fa-check-circle"></i> {{ result.message }}</p>
                            </div>
                        {% elseif result.data is defined and result.data is not empty %}
                            <div class="result-table">
                                <table>
                                    <thead>
                                        <tr>
                                            {% for column in result.data[0]|keys %}
                                                <th>{{ column }}</th>
                                            {% endfor %}
                                        </tr>
                                    </thead>
                                    <tbody>
                                        {% for row in result.data %}
                                            <tr>
                                                {% for value in row %}
                                                    <td>{{ value }}</td>
                                                {% endfor %}
                                            </tr>
                                        {% endfor %}
                                    </tbody>
                                </table>
                            </div>
                        {% else %}
                            {% if success is defined and success is not empty %}
                                <div class="alert alert-success">
                                    <p><i class="fas fa-check-circle"></i> {{ success }}</p>
                                </div>
                            {% else %}
                                <div class="alert alert-info mb-3">
                                    <p><i class="fas fa-info-circle"></i> La requête a été exécutée avec succès, mais n'a retourné aucun résultat.</p>
                                </div>
                            {% endif %}
                        {% endif %}
                    </div>
                {% endif %}
            </div>
            
            <!-- Contenu de l'onglet Créer une table -->
            <div id="tab-create-table" class="tab-content">
                <div class="db-form-section">
                    <h3 class="db-form-header">Créer une nouvelle table</h3>
                    <form action="{{ path('app_cpanel_database_query', {'dbName': dbName}) }}" method="post" id="create-table-form">
                        <div class="db-form-group">
                            <label for="table_name" class="db-label">Nom de la table</label>
                            <input type="text" id="table_name" name="table_name" class="db-input" placeholder="Entrez le nom de la table" required>
                        </div>
                        
                        <div class="db-form-group">
                            {# <label class="db-label">Ajouter un ID auto-incrémenté ?</label> #}
                            <div class="db-checkbox-container hidden">
                                <input type="checkbox" id="add_id_field" name="add_id_field" checked>
                                <label for="add_id_field" class="db-checkbox-label">Oui, ajouter un champ ID auto-incrémenté comme clé primaire</label>
                            </div>
                        </div>
                        
                        <div class="db-form-group">
                            <label class="db-label mt-3">Champs de la table</label>
                            <div id="fields-container" class="db-dynamic-fields">
                                <div class="field-row">
                                    <input type="text" name="field_name[]" class="db-input mb-3 db-field-name" placeholder="Nom du champ" required>
                                    <select name="field_type[]" class="db-select">
                                        <option value="VARCHAR(255)">Texte court (VARCHAR)</option>
                                        <option value="TEXT">Texte long (TEXT)</option>
                                        <option value="INT">Nombre entier (INT)</option>
                                        <option value="DECIMAL(10,2)">Nombre décimal (DECIMAL)</option>
                                        <option value="DATE">Date</option>
                                        <option value="DATETIME">Date et heure</option>
                                        <option value="BOOLEAN">Booléen</option>
                                    </select>
                                    <div class="checkbox-container mb-3 mt-3">
                                        <input type="checkbox" name="field_null[0]" id="field_null_0">
                                        <label for="field_null_0">Peut être vide</label>
                                    </div>
                                    <div class="field-actions hidden">
                                        <button type="button" class="db-btn db-btn-sm db-btn-danger remove-field" disabled>
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                            <button type="button" class="db-btn db-btn-secondary db-btn-sm btn-add-field mt-3">
                                <i class="fas fa-plus"></i> Ajouter un champ
                            </button>
                        </div>
                        
                        <input type="hidden" name="db_password" value="{{ app.session.get('db_password_' ~ dbName) }}">
                        <input type="hidden" name="query" id="create_table_query">
                        <div class="db-form-footer">
                            <div></div>
                            <button type="submit" name="create_table" class="db-btn db-btn-primary db-btn-icon">
                                <i class="fas fa-table"></i> Créer la table
                            </button>
                        </div>
                    </form>
                </div>
            </div>
            
            <!-- Contenu de l'onglet Gérer les données -->
            <div id="tab-manage-data" class="tab-content">
                <div class="db-form-section">
                    <h3 class="db-form-header">Sélectionner une table</h3>
                    <div class="table-select">
                        <form action="{{ path('app_cpanel_database_query', {'dbName': dbName}) }}" method="post" id="select-table-form">
                            <div class="flex">
                                <select name="table_name" class="db-select" id="table-select">
                                    <option value="">Sélectionnez une table</option>
                                    {% for table in tables %}
                                        <option value="{{ table }}" {% if selectedTable == table %}selected{% endif %}>{{ table }}</option>
                                    {% endfor %}
                                </select>
                                <button type="submit" name="view_table_data" class="db-btn db-btn-primary ml-2">
                                    <i class="fas fa-eye"></i> Afficher
                                </button>
                            </div>
                            <input type="hidden" name="db_password" value="{{ app.session.get('db_password_' ~ dbName) }}">
                        </form>
                    </div>
                    
                    {% if tableData is defined and tableData is not null and tableStructure is defined and tableStructure is not null %}
                        <div class="mt-6">
                            <h3 class="db-form-header">Données de la table {{ selectedTable }}</h3>
                            
                            <!-- Affichage des données de la table -->
                            <div class="db-table-container">
                                <table class="db-table">
                                    <thead>
                                        <tr>
                                            {% for column in tableData.data[0]|keys %}
                                                <th>{{ column }}</th>
                                            {% endfor %}
                                            <th class="db-table-actions">Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        {% for row in tableData.data %}
                                            <tr>
                                                {% for value in row %}
                                                    <td>{{ value }}</td>
                                                {% endfor %}
                                                <td class="db-table-actions">
                                                    <div class="flex space-x-2">
                                                        <button class="db-btn db-btn-sm db-btn-secondary">
                                                            <i class="fas fa-edit"></i>
                                                        </button>
                                                        <button class="db-btn db-btn-sm db-btn-danger">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </div>
                                                </td>
                                            </tr>
                                        {% endfor %}
                                    </tbody>
                                </table>
                            </div>
                            
                            <!-- Formulaire d'ajout de données -->
                            <div class="mt-6">
                                <h4 class="db-form-subheader">Ajouter des données</h4>
                                <form action="{{ path('app_cpanel_database_query', {'dbName': dbName}) }}" method="post" class="data-form">
                                    {% for field in tableStructure.data %}
                                        {% if field.Field != 'id' and field.Extra != 'auto_increment' %}
                                            <div class="db-form-group">
                                                <label for="{{ field.Field }}" class="db-label">{{ field.Field }}</label>
                                                <input type="text" id="{{ field.Field }}" name="{{ field.Field }}" class="db-input" placeholder="{{ field.Type }}">
                                            </div>
                                        {% endif %}
                                    {% endfor %}
                                    <input type="hidden" name="table_name" value="{{ selectedTable }}">
                                    <input type="hidden" name="db_password" value="{{ app.session.get('db_password_' ~ dbName) }}">
                                    <div class="db-form-footer">
                                        <div></div>
                                        <button type="submit" name="insert_data" class="db-btn db-btn-primary db-btn-icon">
                                            <i class="fas fa-plus"></i> Ajouter
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    {% endif %}
                </div>
            </div>
            
            <!-- Liste des tables (visible dans tous les onglets) -->
            <div class="mt-6">
                <h3 class="text-xl font-semibold mb-4">Tables dans {{ dbName }}</h3>
                {% if tables is empty %}
                    <p class="text-gray-500">Aucune table trouvée dans cette base de données.</p>
                {% else %}
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                        {% for table in tables %}
                            <div class="db-card">
                                <div class="db-card-header">
                                    <h4>{{ table }}</h4>
                                </div>
                                <div class="db-card-body">
                                    <div class="flex space-x-2">
                                        <button onclick="document.getElementById('query').value = 'SELECT * FROM {{ table }} LIMIT 100;'; switchToTab('sql');" class="db-btn db-btn-sm db-btn-secondary db-btn-icon">
                                            <i class="fas fa-eye"></i> Voir
                                        </button>
                                        <button onclick="document.getElementById('query').value = 'DESCRIBE {{ table }};'; switchToTab('sql');" class="db-btn db-btn-sm db-btn-secondary db-btn-icon">
                                            <i class="fas fa-info-circle"></i> Structure
                                        </button>
                                        <button onclick="selectTableForManagement('{{ table }}');" class="db-btn db-btn-sm db-btn-secondary db-btn-icon">
                                            <i class="fas fa-database"></i> Gérer
                                        </button>
                                        <form action="{{ path('app_cpanel_database_drop_table', {'dbName': dbName, 'tableName': table}) }}" method="post" class="inline" onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer cette table ? Cette action est irréversible.')">
                                            <button type="submit" class="db-btn db-btn-sm db-btn-danger db-btn-icon">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        {% endfor %}
                    </div>
                {% endif %}
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Gestion des onglets
        const tabs = document.querySelectorAll('.tab');
        const tabContents = document.querySelectorAll('.tab-content');
        
        tabs.forEach(tab => {
            tab.addEventListener('click', () => {
                const tabId = tab.getAttribute('data-tab');
                
                // Désactiver tous les onglets et contenus
                tabs.forEach(t => t.classList.remove('active'));
                tabContents.forEach(content => content.classList.remove('active'));
                
                // Activer l'onglet et le contenu sélectionnés
                tab.classList.add('active');
                document.getElementById('tab-' + tabId).classList.add('active');
                
                // Stocker l'onglet actif dans le localStorage
                localStorage.setItem('activeTab', tabId);
            });
        });
        
        // Restaurer l'onglet actif depuis le localStorage
        const activeTab = localStorage.getItem('activeTab');
        if (activeTab) {
            const tabToActivate = document.querySelector(`.tab[data-tab="${activeTab}"]`);
            if (tabToActivate) {
                tabToActivate.click();
            }
        }
        
        // Fonction pour changer d'onglet depuis l'extérieur
        window.switchToTab = function(tabId) {
            const tabToActivate = document.querySelector(`.tab[data-tab="${tabId}"]`);
            if (tabToActivate) {
                tabToActivate.click();
            }
        };
        
        // Gestion des champs dynamiques pour la création de table
        const fieldsContainer = document.getElementById('fields-container');
        const addFieldBtn = document.querySelector('.btn-add-field');
        
        if (addFieldBtn && fieldsContainer) {
            let fieldCount = 1;
            
            addFieldBtn.addEventListener('click', () => {
                const fieldRow = document.createElement('div');
                fieldRow.className = 'field-row';
                
                fieldRow.innerHTML = `
                    <input type="text" name="field_name[]" class="db-input mb-3 db-field-name" placeholder="Nom du champ" required>
                    <select name="field_type[]" class="db-select">
                        <option value="VARCHAR(255)">Texte court (VARCHAR)</option>
                        <option value="TEXT">Texte long (TEXT)</option>
                        <option value="INT">Nombre entier (INT)</option>
                        <option value="DECIMAL(10,2)">Nombre décimal (DECIMAL)</option>
                        <option value="DATE">Date</option>
                        <option value="DATETIME">Date et heure</option>
                        <option value="BOOLEAN">Booléen</option>
                    </select>
                    <div class="db-checkbox-container mb-3 mt-3">
                        <input type="checkbox" name="field_null[${fieldCount}]" id="field_null_${fieldCount}" class="db-checkbox">
                        <label for="field_null_${fieldCount}" class="db-checkbox-label">Peut être vide</label>
                    </div>
                    <div class="db-field-actions">
                        <button type="button" class="db-btn mt-3 mb-3 db-btn-danger db-btn-small db-btn-icon remove-field">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                `;
                
                fieldsContainer.appendChild(fieldRow);
                
                // Activer le bouton de suppression pour tous les champs
                const removeButtons = document.querySelectorAll('.remove-field');
                removeButtons.forEach(btn => {
                    btn.disabled = removeButtons.length <= 1;
                    btn.addEventListener('click', function() {
                        this.closest('.field-row').remove();
                        
                        // Mettre à jour l'état des boutons de suppression
                        const remainingButtons = document.querySelectorAll('.remove-field');
                        remainingButtons.forEach(btn => {
                            btn.disabled = remainingButtons.length <= 1;
                        });
                    });
                });
                
                fieldCount++;
            });
            
            // Initialiser le premier bouton de suppression
            const initialRemoveButton = document.querySelector('.remove-field');
            if (initialRemoveButton) {
                initialRemoveButton.addEventListener('click', function() {
                    this.closest('.field-row').remove();
                });
            }
        }
        
        // Validation du formulaire de création de table
        const createTableForm = document.getElementById('create-table-form');
        if (createTableForm) {
            createTableForm.addEventListener('submit', function(e) {
                const tableNameInput = document.getElementById('table_name');
                const fieldNameInputs = document.querySelectorAll('input[name="field_name[]"]');
                
                if (!tableNameInput.value.trim()) {
                    e.preventDefault();
                    alert('Veuillez saisir un nom de table.');
                    return;
                }
                
                let hasEmptyField = false;
                fieldNameInputs.forEach(input => {
                    if (!input.value.trim()) {
                        hasEmptyField = true;
                    }
                });
                
                if (hasEmptyField) {
                    e.preventDefault();
                    alert('Tous les champs doivent avoir un nom.');
                    return;
                }
                
                // Générer la requête SQL CREATE TABLE
                const tableName = tableNameInput.value.trim();
                const addIdField = document.getElementById('add_id_field').checked;
                
                let query = `CREATE TABLE \`${tableName}\` (\n`;
                
                // Ajouter le champ ID auto-incrémenté si demandé
                if (addIdField) {
                    query += '    `id` INT AUTO_INCREMENT PRIMARY KEY,\n';
                }
                
                // Ajouter les champs définis par l'utilisateur
                const fieldRows = document.querySelectorAll('.field-row');
                let fields = [];
                
                fieldRows.forEach((row, index) => {
                    const fieldName = row.querySelector('input[name="field_name[]"]').value.trim();
                    const fieldType = row.querySelector('select[name="field_type[]"]').value;
                    const canBeNull = row.querySelector(`input[id^="field_null_"]`).checked;
                    
                    if (fieldName) {
                        let fieldDef = `    \`${fieldName}\` ${fieldType}`;
                        fieldDef += canBeNull ? '' : ' NOT NULL';
                        fields.push(fieldDef);
                    }
                });
                
                query += fields.join(',\n');
                query += '\n);';
                
                // Mettre la requête dans le champ caché
                document.getElementById('create_table_query').value = query;
            });
        }
        
        // Gestion de la sélection de table pour la gestion des données
        window.selectTableForManagement = function(tableName) {
            const tableSelect = document.getElementById('table-select');
            if (tableSelect) {
                tableSelect.value = tableName;
                switchToTab('manage-data');
                
                // Soumettre le formulaire après un court délai pour permettre le changement d'onglet
                setTimeout(() => {
                    document.getElementById('select-table-form').submit();
                }, 100);
            }
        };
    });
</script>
{% endblock %}