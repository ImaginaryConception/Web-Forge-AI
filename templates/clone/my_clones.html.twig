{% extends 'base.html.twig' %}

{% block title %}Mes Sites Web Clonés - Web Forge{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/codemirror.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/theme/monokai.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/addon/fold/foldgutter.min.css">
    <style>
        .CodeMirror {
            height: 100%;
            font-family: 'Fira Code', monospace;
        }
        .file-btn.active {
            background-color: rgba(59, 130, 246, 0.1);
            border-left: 2px solid #3b82f6;
        }
        .dark .file-btn.active {
            background-color: rgba(59, 130, 246, 0.2);
        }
    </style>
{% endblock %}

{% block body %}
<div class="min-h-screen transition-colors duration-200">
    <div class="container mx-auto px-4 py-8">
        <div id="error-alert" class="hidden max-w-3xl mx-auto mb-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
            <strong class="font-bold">Erreur!</strong>
            <span id="error-message" class="block sm:inline"></span>
            <span class="absolute top-0 bottom-0 right-0 px-4 py-3">
                <svg class="fill-current h-6 w-6 text-red-500" role="button" id="close-error" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                    <title>Fermer</title>
                    <path d="M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z"/>
                </svg>
            </span>
        </div>
        <div class="text-center mb-12">
            <h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-4">Mes Sites Web Clonés</h1>
            <p class="text-lg text-gray-600 dark:text-gray-300">Gérez vos sites web clonés avec Web Forge AI</p>
            <a href="{{ path('app_clone') }}" class="inline-block mt-4 bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-6 rounded-lg transition duration-200">Cloner un nouveau site</a>
        </div>

        {% if clones is empty %}
            <div class="text-center py-12">
                <p class="text-gray-600 dark:text-gray-300">Vous n'avez pas encore cloné de sites web.</p>
                <a href="{{ path('app_clone') }}" class="inline-block mt-4 bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-6 rounded-lg transition duration-200">Commencer à cloner</a>
            </div>
        {% else %}
            {% for clone in clones %}
                {% if clone.status == 'completed' %}
                    <div class="max-w-5xl mx-auto mb-12 bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6">
                        <div class="mb-6">
                            <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-2">Clone #{{ clone.id }}</h2>
                            <div class="bg-gray-100 dark:bg-gray-700 rounded p-4 mb-4">
                                <h3 class="text-md font-medium text-gray-700 dark:text-gray-300 mb-2">URL source :</h3>
                                <p class="text-gray-600 dark:text-gray-400">{{ clone.sourceUrl }}</p>
                            </div>
                        </div>

                        <div class="mb-6">
                            <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6">
                                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Explorateur de fichiers</h3>
                                <div class="file-explorer overflow-y-auto h-64" data-clone-id="{{ clone.id }}">
                                    <div class="file-tree">
                                        {% set fileTypes = {
                                            'html': 'HTML',
                                            'css': 'Style',
                                            'js': 'Script'
                                        } %}

                                        {% for type, label in fileTypes %}
                                            {% set typeFiles = [] %}
                                            {% for path, content in clone.files %}
                                                {% if path ends with type %}
                                                    {% set typeFiles = typeFiles|merge([{
                                                        'path': path,
                                                        'name': path|split('/')|last
                                                    }]) %}
                                                {% endif %}
                                            {% endfor %}

                                            {% if typeFiles is not empty %}
                                                <div class="file-category mb-4">
                                                    <h4 class="text-md font-medium text-gray-700 dark:text-gray-300 mb-2 flex items-center">
                                                        <span class="mr-2">
                                                            {% if type == 'html' %}
                                                                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"><path d="M9 4.804A7.968 7.968 0 005.5 4c-1.255 0-2.443.29-3.5.804v10A7.969 7.969 0 015.5 14c1.669 0 3.218.51 4.5 1.385A7.962 7.962 0 0114.5 14c1.255 0 2.443.29 3.5.804v-10A7.968 7.968 0 0014.5 4c-1.255 0-2.443.29-3.5.804V12a1 1 0 11-2 0V4.804z"></path></svg>
                                                            {% elseif type == 'css' %}
                                                                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"><path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"></path></svg>
                                                            {% else %}
                                                                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"><path d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4z"></path></svg>
                                                            {% endif %}
                                                        </span>
                                                        {{ label }}s
                                                    </h4>
                                                    <ul class="pl-4 space-y-1">
                                                        {% for file in typeFiles %}
                                                            <li>
                                                                <button class="file-btn text-left w-full px-2 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center group" 
                                                                        data-clone-id="{{ clone.id }}" 
                                                                        data-file-path="{{ file.path }}">
                                                                    <span class="flex-grow text-gray-700 dark:text-gray-300 truncate">{{ file.name }}</span>
                                                                    <span class="hidden group-hover:inline-flex ml-2 text-gray-500 dark:text-gray-400">
                                                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                                                                        </svg>
                                                                    </span>
                                                                </button>
                                                            </li>
                                                        {% endfor %}
                                                    </ul>
                                                </div>
                                            {% endif %}
                                        {% endfor %}
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="flex flex-col gap-6">
                            <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6">
                                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Code cloné</h3>
                                <div class="flex justify-end mb-4">
                                    <button class="editor-fullscreen-btn text-gray-600 hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-400 transition-colors duration-200">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-5h-4m4 0v4m0 0l-5-5m-7 11h4m-4 0v4m0-4l5 5m5-9v4m0-4h4m-4 0l5 5-5-5z" />
                                        </svg>
                                    </button>
                                </div>
                                <div class="editor-container h-[600px] relative" data-clone-id="{{ clone.id }}"></div>
                                <div class="flex space-x-4 mt-4">
                                    <button class="download-btn bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded transition duration-200" data-clone-id="{{ clone.id }}">
                                        Télécharger le site
                                    </button>
                                    <div class="flex flex-col space-y-2">
                                        {% if clone.deployed %}
                                            <div class="flex space-x-4">
                                                <div class="text-green-600 dark:text-green-400 font-semibold py-2 px-4">
                                                    Site publié sur {{ clone.domainName }}
                                                </div>
                                                <form action="{{ path('app_deploy_clone', {'cloneId': clone.id}) }}" method="post" class="inline">
                                                    <button type="submit" class="bg-yellow-600 hover:bg-yellow-700 text-white font-bold py-2 px-4 rounded transition duration-200">
                                                        Redéployer le site
                                                    </button>
                                                </form>
                                            </div>
                                        {% else %}
                                            {{ form_start(domain_form, {'action': path('payDomain', {'type': 'clone', 'id': clone.id}), 'attr': {'class': 'space-y-2'}}) }}
                                                <div class="flex space-x-2">
                                                    {{ form_widget(domain_form.domainName) }}
                                                    {{ form_widget(domain_form.extension) }}
                                                </div>
                                                <div>
                                                    <button type="submit" id="publish-button-{{ clone.id }}" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded transition duration-200">
                                                    Publier le site
                                                    </button>
                                                </div>
                                            {{ form_end(domain_form) }}
                                        {% endif %}
                                    </div>
                                </div>
                            </div>

                            <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6">
                                <div class="flex justify-between items-center mb-4">
                                    <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Aperçu en direct</h3>
                                    <button class="preview-fullscreen-btn text-gray-600 hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-400 transition-colors duration-200">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-5h-4m4 0v4m0 0l-5-5m-7 11h4m-4 0v4m0-4l5 5m5-9v4m0-4h4m-4 0l5 5-5-5z" />
                                        </svg>
                                    </button>
                                </div>
                                <div class="preview-container h-[500px] w-full bg-white border rounded-lg overflow-hidden relative" data-clone-id="{{ clone.id }}">
                                    <iframe class="preview-frame w-full h-full" data-clone-id="{{ clone.id }}" src="{{ path('app_preview_clone', {'id': clone.id}) }}"></iframe>
                                </div>
                            </div>
                        </div>
                    </div>
                {% endif %}
            {% endfor %}
        {% endif %}
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <style>
        .tab-btn {
            padding: 0.5rem 1rem;
            border-radius: 0.375rem;
            transition: all 0.2s;
        }
        
        .tab-btn.active {
            background-color: #4F46E5;
            color: white;
        }
        
        .fullscreen {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            z-index: 9999;
            background: white;
            padding: 2rem;
        }

        .dark .fullscreen {
            background: #1F2937;
        }
    </style>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/codemirror.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/mode/xml/xml.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/mode/javascript/javascript.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/mode/css/css.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/mode/htmlmixed/htmlmixed.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/mode/markdown/markdown.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/addon/fold/foldcode.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Gestionnaire pour les boutons de fichiers
            document.querySelectorAll('.file-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const cloneId = this.dataset.cloneId;
                    const filePath = this.dataset.filePath;
                    const previewFrame = document.querySelector(`.preview-frame[data-clone-id="${cloneId}"]`);

                    // Retirer la classe active de tous les boutons
                    document.querySelectorAll('.file-btn').forEach(btn => btn.classList.remove('active'));
                    // Ajouter la classe active au bouton cliqué
                    this.classList.add('active');

                    // Faire la requête AJAX pour obtenir le contenu du fichier
                    fetch(`/preview-clone/${cloneId}?file=${encodeURIComponent(filePath)}`, {
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest',
                            'Accept': 'application/json'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (!data.success) {
                            throw new Error(data.error || 'Erreur lors du chargement du fichier');
                        }
                        // Mettre à jour l'iframe avec le nouveau contenu
                        const iframe = previewFrame;
                        const iframeDoc = iframe.contentDocument || iframe.contentWindow.document;
                        iframeDoc.open();
                        iframeDoc.write(data.content);
                        iframeDoc.close();
                    })
                    .catch(error => {
                        const errorAlert = document.getElementById('error-alert');
                        const errorMessage = document.getElementById('error-message');
                        errorMessage.textContent = error.message;
                        errorAlert.classList.remove('hidden');
                        setTimeout(() => {
                            errorAlert.classList.add('hidden');
                        }, 5000);
                    });
                });
            });

            // Gestionnaire pour fermer l'alerte d'erreur
            document.getElementById('close-error')?.addEventListener('click', function() {
                document.getElementById('error-alert').classList.add('hidden');
            });

            // Gestionnaire pour le téléchargement
            document.querySelectorAll('.download-btn').forEach(btn => {
                btn.addEventListener('click', async function() {
                    const cloneId = this.dataset.cloneId;
                    
                    try {
                        // Récupérer les fichiers du clone
                        const response = await fetch(`/api/clone-files/${cloneId}`, {
                            headers: {
                                'X-Requested-With': 'XMLHttpRequest'
                            }
                        });

                        if (!response.ok) {
                            throw new Error(`Erreur HTTP: ${response.status}`);
                        }

                        const data = await response.json();

                        if (!data.success) {
                            throw new Error(data.error || 'Erreur lors de la récupération des fichiers');
                        }

                        // Créer le ZIP
                        const zip = new JSZip();
                        for (const [filePath, content] of Object.entries(data.files)) {
                            zip.file(filePath, content);
                        }

                        // Générer et télécharger le ZIP
                        const blob = await zip.generateAsync({
                            type: 'blob'
                        });
                        const url = window.URL.createObjectURL(blob);
                        const a = document.createElement('a');
                        a.href = url;
                        a.download = `clone-${cloneId}.zip`;
                        document.body.appendChild(a);
                        a.click();
                        window.URL.revokeObjectURL(url);
                        document.body.removeChild(a);
                    } catch (error) {
                        console.error("Erreur lors de la création ou du téléchargement du fichier ZIP:", error);
                        const errorAlert = document.getElementById('error-alert');
                        const errorMessage = document.getElementById('error-message');
                        errorMessage.textContent = error.message;
                        errorAlert.classList.remove('hidden');
                        setTimeout(() => {
                            errorAlert.classList.add('hidden');
                        }, 5000);
                    }
                });
            });
        });
    </script>
{% endblock %}