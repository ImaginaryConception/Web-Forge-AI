{% extends 'base.html.twig' %}

{% block title %}Base de données: {{ database.name }}{% endblock %}

{% block stylesheets %}
{{ parent() }}
<link rel="stylesheet" href="{{ asset('css/database.css') }}">
<style>
    /* Variables */
    :root {
        --primary-color: #4f46e5;
        --primary-color-light: #6366f1;
        --primary-color-dark: #4338ca;
        --primary-color-rgb: 79, 70, 229;
        --secondary-color: #0ea5e9;
        --text-color: #1e293b;
        --text-color-light: #64748b;
        --text-muted: #94a3b8;
        --border-color: #e2e8f0;
        --card-bg: #ffffff;
        --hover-bg: #f8fafc;
        --empty-bg: #f1f5f9;
        --success-color: #10b981;
        --warning-color: #f59e0b;
        --danger-color: #ef4444;
        --info-color: #3b82f6;
        --shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.05);
        --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        --radius-sm: 0.375rem;
        --radius-md: 0.5rem;
        --radius-lg: 0.75rem;
        --transition: all 0.3s ease;
    }
    
    /* Database Header */
    .database-header {
        background-color: var(--card-bg);
        border-radius: var(--radius-lg);
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: var(--shadow-md);
        border: 1px solid var(--border-color);
        position: relative;
        overflow: hidden;
    }
    
    .database-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 5px;
        background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
    }
    
    .database-info {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
    }
    
    .database-title {
        margin: 0 0 0.5rem 0;
        color: var(--text-color);
        font-weight: 700;
        font-size: 2rem;
    }
    
    .database-date {
        color: var(--text-muted);
        font-size: 0.95rem;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
    }
    
    .database-date i {
        margin-right: 0.5rem;
    }
    
    .database-actions {
        display: flex;
        gap: 0.75rem;
    }
    
    /* Prompt Container */
    .prompt-container {
        background-color: var(--hover-bg);
        border-radius: var(--radius-md);
        padding: 1.5rem;
        margin-top: 1.5rem;
        border: 1px solid var(--border-color);
        position: relative;
        transition: var(--transition);
        max-width: 100%;
    }
    
    .prompt-container:hover {
        box-shadow: var(--shadow-sm);
        border-color: var(--primary-color-light);
    }
    
    .prompt-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
        padding-bottom: 0.75rem;
        border-bottom: 1px solid var(--border-color);
    }
    
    .prompt-title {
        margin: 0;
        color: var(--text-color);
        font-size: 1.1rem;
        font-weight: 600;
        display: flex;
        align-items: center;
    }
    
    .prompt-title i {
        color: var(--primary-color);
        margin-right: 0.5rem;
    }
    
    .prompt-type {
        display: inline-block;
        padding: 0.25rem 0.75rem;
        background-color: var(--primary-color);
        color: white;
        border-radius: 2rem;
        font-size: 0.8rem;
        font-weight: 500;
    }
    
    .prompt-content {
        color: var(--text-color-light);
        line-height: 1.6;
        font-size: 0.95rem;
        position: relative;
        overflow: hidden;
        max-height: 4.8rem; /* 3 lines */
        transition: var(--transition);
    }
    
    .prompt-content.expanded {
        max-height: none;
    }
    
    .prompt-content-full {
        display: none;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(255, 255, 255, 0.9);
        z-index: 10;
        padding: 1rem;
        border-radius: var(--radius-md);
        box-shadow: var(--shadow-md);
    }
    
    .prompt-toggle {
        color: var(--primary-color);
        cursor: pointer;
        font-weight: 500;
        display: inline-flex;
        align-items: center;
        margin-top: 0.5rem;
        font-size: 0.9rem;
    }
    
    .prompt-toggle i {
        margin-left: 0.25rem;
        transition: transform 0.3s ease;
    }
    
    .prompt-toggle.expanded i {
        transform: rotate(180deg);
    }
    
    /* Table List */
    .table-list-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
    }
    
    .table-list-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--text-color);
        margin: 0;
        display: flex;
        align-items: center;
    }
    
    .table-list-title i {
        margin-right: 0.75rem;
        color: var(--primary-color);
    }
    
    .table-list {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1.5rem;
        margin-top: 1.5rem;
    }
    
    .table-card {
        background-color: var(--card-bg);
        border: 1px solid var(--border-color);
        border-radius: var(--radius-md);
        overflow: hidden;
        transition: var(--transition);
        height: 100%;
        display: flex;
        flex-direction: column;
        position: relative;
    }
    
    .table-card:hover, .table-card.active {
        transform: translateY(-5px);
        box-shadow: var(--shadow-md);
        border-color: var(--primary-color-light);
    }
    
    .table-card-header {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        padding: 1.25rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    .table-card-title {
        margin: 0;
        font-size: 1.25rem;
        font-weight: 600;
    }
    
    .table-card-body {
        padding: 1.25rem;
        flex: 1;
    }
    
    .table-card-section {
        margin-bottom: 1.25rem;
    }
    
    .table-card-section-title {
        font-size: 1rem;
        font-weight: 600;
        margin: 0 0 0.75rem 0;
        color: var(--text-color);
        display: flex;
        align-items: center;
    }
    
    .table-card-section-title i {
        margin-right: 0.5rem;
        color: var(--primary-color);
        font-size: 0.9rem;
    }
    
    .field-list {
        border: 1px solid var(--border-color);
        border-radius: var(--radius-sm);
        overflow: hidden;
    }
    
    .field-item {
        display: flex;
        justify-content: space-between;
        padding: 0.5rem 0.75rem;
        border-bottom: 1px solid var(--border-color);
        font-size: 0.9rem;
    }
    
    .field-item:last-child {
        border-bottom: none;
    }
    
    .field-name {
        font-weight: 500;
        color: var(--text-color);
    }
    
    .field-type {
        color: var(--text-muted);
        font-size: 0.85rem;
        background-color: var(--hover-bg);
        padding: 0.15rem 0.5rem;
        border-radius: 2rem;
    }
    
    .record-count {
        display: flex;
        align-items: center;
        color: var(--text-color-light);
        font-size: 0.9rem;
        margin-top: 0.5rem;
    }
    
    .record-count i {
        margin-right: 0.5rem;
        color: var(--info-color);
    }
    
    .table-card-actions {
        display: flex;
        justify-content: space-between;
        margin-top: 1.25rem;
        gap: 0.5rem;
    }
    
    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 3rem 2rem;
        background-color: var(--empty-bg);
        border-radius: var(--radius-lg);
        margin-top: 1.5rem;
        border: 2px dashed var(--border-color);
        transition: var(--transition);
    }
    
    .empty-state:hover {
        border-color: var(--primary-color);
        background-color: rgba(var(--primary-color-rgb), 0.05);
    }
    
    .empty-state i {
        font-size: 3rem;
        color: var(--text-muted);
        margin-bottom: 1.5rem;
        transition: var(--transition);
    }
    
    .empty-state:hover i {
        color: var(--primary-color);
        transform: scale(1.1);
    }
    
    .empty-state h3 {
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--text-color);
        margin-bottom: 0.75rem;
    }
    
    .empty-state p {
        color: var(--text-color-light);
        max-width: 500px;
        margin: 0 auto 1.5rem auto;
    }
</style>
{% endblock %}

{% block body %}
<div class="container mt-4">
    <div class="database-header">
        <div class="database-info">
            <div>
                <h1 class="database-title">{{ database.name }}</h1>
                <p class="database-date"><i class="fas fa-calendar-alt"></i> Créée le {{ database.createdAt|date('d/m/Y H:i') }}</p>
                
                <div class="prompt-container">
                    <div class="prompt-header">
                        <h4 class="prompt-title"><i class="fas fa-lightbulb"></i> Prompt associé</h4>
                        <span class="prompt-type">{{ database.prompt.websiteType }}</span>
                    </div>
                    <div class="prompt-content" id="promptContent">
                        {{ database.prompt.content|slice(0, 150) }}{% if database.prompt.content|length > 150 %}...{% endif %}
                    </div>
                    {% if database.prompt.content|length > 150 %}
                    <div class="prompt-toggle" id="promptToggle">
                        Voir plus <i class="fas fa-chevron-down"></i>
                    </div>
                    {% endif %}
                </div>
            </div>
            <div class="database-actions">
                <a href="{{ path('app_database_edit', {'id': database.id}) }}" class="btn btn-primary">
                    <i class="fas fa-edit"></i> Modifier
                </a>
                <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal">
                    <i class="fas fa-trash"></i> Supprimer
                </button>
                <a href="{{ path('app_database_export', {'id': database.id}) }}" class="btn btn-secondary">
                    <i class="fas fa-download"></i> Exporter SQL
                </a>
            </div>
        </div>
    </div>
    
    <div class="table-list-header">
        <h2 class="table-list-title"><i class="fas fa-table"></i> Tables</h2>
        <a href="{{ path('app_database_add_table', {'id': database.id}) }}" class="btn btn-success">
            <i class="fas fa-plus"></i> Ajouter une table
        </a>
    </div>
    
    {% if database.tables is empty %}
        <div class="empty-state">
            <i class="fas fa-table"></i>
            <h3>Aucune table</h3>
            <p>Cette base de données ne contient pas encore de tables. Commencez par en ajouter une.</p>
            <a href="{{ path('app_database_add_table', {'id': database.id}) }}" class="btn btn-primary mt-3">
                <i class="fas fa-plus"></i> Ajouter une table
            </a>
        </div>
    {% else %}
        <div class="table-list">
            {% for tableName, tableData in database.tables %}
                <div class="table-card">
                    <div class="table-card-header">
                        <h3 class="table-card-title">{{ tableName }}</h3>
                    </div>
                    <div class="table-card-body">
                        <div class="table-card-section">
                            <h4 class="table-card-section-title"><i class="fas fa-columns"></i> Structure</h4>
                            <div class="field-list">
                                {% if tableData.fields is empty %}
                                    <div class="field-item">
                                        <span class="text-muted">Aucun champ défini</span>
                                    </div>
                                {% else %}
                                    {% for fieldName, fieldType in tableData.fields %}
                                        <div class="field-item">
                                            <span class="field-name">{{ fieldName }}</span>
                                            <span class="field-type">{{ fieldType }}</span>
                                        </div>
                                    {% endfor %}
                                {% endif %}
                            </div>
                        </div>
                        
                        <div class="record-count">
                            <i class="fas fa-database"></i>
                            {% if tableData.records is defined %}
                                {{ tableData.records|length }} enregistrement(s)
                            {% else %}
                                0 enregistrement
                            {% endif %}
                        </div>
                        
                        <div class="table-card-actions">
                            <a href="{{ path('app_database_table_detail', {'id': database.id, 'tableName': tableName}) }}" class="btn btn-primary btn-sm">
                                <i class="fas fa-eye"></i> Voir
                            </a>
                            <a href="{{ path('app_database_add_table', {'id': database.id}) }}" class="btn btn-secondary btn-sm">
                                <i class="fas fa-edit"></i> Modifier
                            </a>
                            <form method="post" action="{{ path('app_database_delete_table', {'id': database.id, 'tableName': tableName}) }}" style="display:inline;">
                                <input type="hidden" name="_token" value="{{ csrf_token('delete-table-' ~ tableName) }}">
                                <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Êtes-vous sûr de vouloir supprimer cette table?')">
                                    <i class="fas fa-trash"></i> Supprimer
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
                
                <!-- Modal de suppression de table supprimée -->
            {% endfor %}
        </div>
    {% endif %}
    
    <!-- Modal de suppression de base de données supprimée -->
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Initialiser les tooltips Bootstrap
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
        
        // Toggle pour afficher/masquer le contenu complet du prompt
        const promptContent = document.getElementById('promptContent');
        const promptToggle = document.getElementById('promptToggle');
        
        if (promptToggle) {
            promptToggle.addEventListener('click', function() {
                promptContent.classList.toggle('expanded');
                promptToggle.classList.toggle('expanded');
                
                if (promptContent.classList.contains('expanded')) {
                    promptContent.textContent = "{{ database.prompt.content|e('js') }}";
                    promptToggle.innerHTML = 'Voir moins <i class="fas fa-chevron-up"></i>';
                } else {
                    promptContent.textContent = "{{ database.prompt.content|slice(0, 150)|e('js') }}...";
                    promptToggle.innerHTML = 'Voir plus <i class="fas fa-chevron-down"></i>';
                }
            });
        }
        
        // Ajouter une classe active aux cartes de table au survol
        const tableCards = document.querySelectorAll('.table-card');
        tableCards.forEach(card => {
            card.addEventListener('mouseenter', function() {
                this.classList.add('active');
            });
            
            card.addEventListener('mouseleave', function() {
                this.classList.remove('active');
            });
        });
    });
</script>
{% endblock %}