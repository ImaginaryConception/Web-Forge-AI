{% extends 'base.html.twig' %}

{% block title %}Web Forge AI - Générateur de Sites Web par Intelligence Artificielle{% endblock %}

{% block page_title %}Web Forge AI{% endblock %}
{% block page_subtitle %}Créez des sites web professionnels en quelques secondes grâce à l'intelligence artificielle{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/codemirror.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/theme/monokai.min.css">
{% endblock %}

{% block body %}
<div class="min-h-screen transition-colors duration-200">
    <div class="container mx-auto">
        <div class="text-center mb-12">
            <h2 class="text-5xl font-extrabold mb-6">
                <span class="bg-clip-text text-transparent bg-gradient-to-r from-primary via-secondary to-accent">Web Forge AI</span>
            </h2>
            <p class="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto leading-relaxed">Transformez vos idées en sites web professionnels grâce à notre technologie d'intelligence artificielle avancée. Créez, personnalisez et déployez en quelques minutes.</p>
            {% if app.user %}
                {% if not app.user.isSubscribed %}
                    <div class="max-w-3xl mx-auto bg-gradient-to-br mt-5 from-accent/10 to-primary/10 dark:from-accent/20 dark:to-primary/20 rounded-2xl p-8 mb-8 border border-accent/20 dark:border-accent/30 backdrop-blur-sm">
                        <div class="flex items-center justify-center mb-6">
                            <i class="fas fa-crown text-4xl text-yellow-500 mr-3"></i>
                            <h2 class="text-2xl font-bold bg-gradient-to-r from-yellow-500 to-yellow-600 bg-clip-text text-transparent">Version Premium</h2>
                        </div>
                        <p class="text-gray-700 dark:text-gray-300 text-lg mb-6 text-center">Accédez à toutes les fonctionnalités premium pour une expérience optimale :</p>
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
                            <div class="flex flex-col items-center p-4 bg-white dark:bg-gray-800 rounded-xl shadow-sm">
                                <i class="fas fa-infinity text-3xl text-primary mb-4"></i>
                                <h3 class="font-semibold text-gray-900 dark:text-white mb-2">Générations Illimitées</h3>
                                <p class="text-gray-600 dark:text-gray-400 text-center text-sm">Créez autant de sites que vous le souhaitez</p>
                            </div>
                            <div class="flex flex-col items-center p-4 bg-white dark:bg-gray-800 rounded-xl shadow-sm">
                                <i class="fas fa-wand-magic-sparkles text-3xl text-secondary mb-4"></i>
                                <h3 class="font-semibold text-gray-900 dark:text-white mb-2">Personnalisation Avancée</h3>
                                <p class="text-gray-600 dark:text-gray-400 text-center text-sm">Contrôle total sur le design et les fonctionnalités</p>
                            </div>
                            <div class="flex flex-col items-center p-4 bg-white dark:bg-gray-800 rounded-xl shadow-sm">
                                <i class="fas fa-cloud-upload-alt text-3xl text-accent mb-4"></i>
                                <h3 class="font-semibold text-gray-900 dark:text-white mb-2">Hébergement Inclus</h3>
                                <p class="text-gray-600 dark:text-gray-400 text-center text-sm">Déployez vos sites instantanément</p>
                            </div>
                        </div>
                        <div class="text-center">
                            <a href="{{ path('app_subscription') }}" class="inline-flex items-center px-8 py-3 rounded-xl bg-gradient-to-r from-yellow-500 to-yellow-600 text-white font-semibold shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-200">
                                <i class="fas fa-bolt mr-2"></i>
                                Passer en Premium
                            </a>
                        </div>
                    </div>
                {% endif %}
                <div class="max-w-3xl mx-auto mb-8 grid-cols-1 md:grid-cols-2 gap-4">
                    <div class="inline-block">
                        <a href="{{ path('app_list_sites') }}" class="flex items-center justify-center p-4 bg-white dark:bg-gray-800 rounded-xl shadow-sm hover:shadow-md transition-all duration-200 group">
                            <i class="fas fa-globe text-2xl text-primary group-hover:text-white mr-3 transition-colors duration-200"></i>
                            <span class="font-semibold text-gray-900 dark:text-white group-hover:text-primary transition-colors duration-200">Mes sites générés</span>
                        </a>
                    </div>
                    <div class="inline-block">
                        <a href="{{ path('app_my_clones') }}" class="flex items-center justify-center p-4 bg-white dark:bg-gray-800 rounded-xl shadow-sm hover:shadow-md transition-all duration-200 group">
                            <i class="fas fa-copy text-2xl text-accent group-hover:text-white mr-3 transition-colors duration-200"></i>
                            <span class="font-semibold text-gray-900 dark:text-white group-hover:text-accent transition-colors duration-200">Mes clones générés</span>
                        </a>
                    </div>
            {% endif %}
        {% if app.user %}
                {{ form_start(form, {'attr': {'id': 'prompt-form', 'class': 'space-y-6 max-w-4xl mx-auto'}}) }}
                    <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm p-8 mb-6">
                        <div class="mb-8">
                            <label class="block text-lg font-medium text-gray-700 dark:text-gray-300 mb-3 text-center">Décrivez votre site web</label>
                            {{ form_widget(form.content, {'attr': {'class': 'w-full px-6 py-4 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-primary focus:border-transparent transition-colors duration-200 text-lg min-h-[150px]', 'placeholder': 'Ex: Je veux un site web moderne pour mon restaurant avec un menu interactif...'}}) }}
                        </div>
                        <div class="flex items-center justify-between">
                            <button type="submit" id="generate-button" class="flex-1 bg-gradient-to-r from-primary to-secondary text-white font-semibold py-3 px-6 rounded-xl shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-200 flex items-center justify-center group disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none disabled:hover:shadow-lg" {% if app.user.count >= 3 and not app.user.isSubscribed %}disabled{% endif %}>
                                <i class="fas fa-wand-magic-sparkles mr-2 group-hover:rotate-12 transition-transform duration-200"></i>
                                <span id="submit-text">
                                    {% if app.user.count == 0 and not app.user.isSubscribed %}
                                        Générer mon site (3 générations gratuites)
                                    {% elseif app.user.count == 1 and not app.user.isSubscribed %}
                                        Générer mon site (2 générations gratuites)
                                    {% elseif app.user.count == 2 and not app.user.isSubscribed %}
                                        Générer mon site (1 génération gratuite)
                                    {% elseif app.user.count >= 3 and not app.user.isSubscribed %}
                                        <i class="fas fa-lock mr-2"></i> Génération bloquée
                                    {% elseif app.user.isSubscribed %}
                                        Générer mon site
                                    {% endif %}
                                </span>
                                <span id="loading-spinner" class="hidden ml-3">
                                    <svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                    </svg>
                                </span>
                            </button>
                            <a href="{{ path('app_clone') }}" class="ml-4 px-6 py-3 rounded-xl bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 font-medium hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200 flex items-center">
                                <i class="fas fa-copy mr-2"></i>
                                Cloner un site
                            </a>
                        </div>
                    </div>
                {{ form_end(form) }}
            </div>

            {% for message in app.flashes('generation_success') %}
                <div class="max-w-3xl mx-auto mb-6 bg-green-50 dark:bg-green-900/50 border border-green-200 dark:border-green-800 rounded-xl p-4 fade-in" style="animation-delay: 200ms;">
                    <div class="flex items-center">
                        <div class="flex-shrink-0">
                            <i class="fas fa-check-circle text-xl text-green-400"></i>
                        </div>
                        <div class="ml-3">
                            <h3 class="text-sm font-medium text-green-800 dark:text-green-200">{{ message }}</h3>
                            <div class="mt-2">
                                <a href="{{ path('app_list_sites') }}" class="inline-flex items-center text-sm font-medium text-green-700 dark:text-green-300 hover:text-green-600 dark:hover:text-green-200">
                                    <i class="fas fa-external-link-alt mr-1"></i>
                                    Voir mes sites générés
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            {% endfor %}

            <div id="error-alert" class="hidden max-w-3xl mx-auto mb-6 bg-red-50 dark:bg-red-900/50 border border-red-200 dark:border-red-800 rounded-xl p-4" role="alert">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <i class="fas fa-exclamation-circle text-xl text-red-400"></i>
                    </div>
                    <div class="ml-3">
                        <h3 class="text-sm font-medium text-red-800 dark:text-red-200">Une erreur est survenue</h3>
                        <div class="mt-2 text-sm text-red-700 dark:text-red-300">
                            <span id="error-message"></span>
                        </div>
                    </div>
                </div>
            </div>

            <div id="success-section" class="hidden max-w-3xl mx-auto bg-white dark:bg-gray-800 rounded-xl shadow-lg p-8 text-center">
                <div class="mb-8">
                    <div class="mx-auto w-16 h-16 bg-green-100 dark:bg-green-900 rounded-full flex items-center justify-center">
                        <i class="fas fa-check text-3xl text-green-500"></i>
                    </div>
                </div>
                <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">Site Généré avec Succès !</h2>
                <p class="text-lg text-gray-600 dark:text-gray-300 mb-8">Votre site a été généré avec succès. Vous pouvez maintenant le consulter dans votre espace personnel.</p>
                <a href="{{ path('app_list_sites') }}" class="inline-flex items-center px-6 py-3 rounded-xl bg-gradient-to-r from-primary to-secondary text-white font-semibold shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-200">
                    <i class="fas fa-external-link-alt mr-2"></i>
                    Voir mes sites générés
                </a>
            </div>
        {% else %}
            <div class="max-w-3xl mx-auto bg-white dark:bg-gray-800 rounded-xl shadow-lg p-8 text-center">
                <div class="mb-8">
                    <div class="mx-auto w-20 h-20 bg-gradient-to-br from-primary/10 to-accent/10 rounded-full flex items-center justify-center">
                        <i class="fas fa-rocket text-4xl text-primary transform rotate-45"></i>
                    </div>
                </div>
                <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">Commencez à Créer avec Web Forge AI</h2>
                <p class="text-lg text-gray-600 dark:text-gray-300 mb-8">Transformez vos idées en sites web professionnels en quelques minutes. Inscrivez-vous maintenant et obtenez 3 générations gratuites !</p>
                <div class="flex flex-col sm:flex-row items-center justify-center space-y-4 sm:space-y-0 sm:space-x-6">
                    <a href="{{ path('app_register') }}" class="w-full sm:w-auto px-8 py-3 rounded-xl bg-gradient-to-r from-primary to-secondary text-white font-semibold shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-200 flex items-center justify-center">
                        <i class="fas fa-user-plus mr-2"></i>
                        Créer un compte gratuit
                    </a>
                    <a href="{{ path('app_login') }}" class="w-full sm:w-auto px-8 py-3 rounded-xl bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 font-medium hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200 flex items-center justify-center">
                        <i class="fas fa-sign-in-alt mr-2"></i>
                        Se connecter
                    </a>
                </div>
            </div>
        {% endif %}
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('prompt-form');
            const resultSection = document.getElementById('result-section');
            const submitText = document.getElementById('submit-text');
            const loadingSpinner = document.getElementById('loading-spinner');
            let currentFiles = {};

            if (form) {
                form.addEventListener('submit', async function(e) {
                    e.preventDefault();
                    const generateButton = document.getElementById('generate-button');
                    generateButton.disabled = true;
                    submitText.classList.add('hidden');
                    loadingSpinner.classList.remove('hidden');

                    try {
                        const formData = new FormData(form);
                        const response = await fetch('{{ path("app_generate") }}', {
                            method: 'POST',
                            headers: {
                                'X-Requested-With': 'XMLHttpRequest'
                            },
                            body: formData
                        });

                        const data = await response.json();
                        if (response.ok && data.success && data.data && data.data.id) {
                            if (data.maskedApiKey) {
                                console.log('Clé API utilisée (masquée):', data.maskedApiKey);
                            }
                            await checkStatus(data.data.id);
                        } else {
                            const errorAlert = document.getElementById('error-alert');
                        const errorMessage = document.getElementById('error-message');
                        errorMessage.textContent = data.error || 'Une erreur est survenue lors de la génération';
                        errorAlert.classList.remove('hidden');
                        throw new Error(data.error || 'Une erreur est survenue lors de la génération');
                        }
                    } catch (error) {
                        // Gestion des erreurs
                    } finally {
                        generateButton.disabled = false;
                        submitText.classList.remove('hidden');
                        loadingSpinner.classList.add('hidden');
                    }
                });
            }

            async function checkStatus(promptId, retryCount = 0, backoffDelay = 1000) {
                const maxRetries = 5;
                const maxBackoffDelay = 16000; // 16 secondes maximum
                const errorAlert = document.getElementById('error-alert');
                const errorMessage = document.getElementById('error-message');

                try {
                    const response = await fetch(`/prompt/${promptId}`, {
                        headers: {
                            'Accept': 'application/json'
                        }
                    });

                    if (!response.ok) {
                        if (response.status === 429 && retryCount < maxRetries) {
                            const nextBackoffDelay = Math.min(backoffDelay * 2, maxBackoffDelay);
                            console.log(`Rate limit atteint, nouvelle tentative dans ${backoffDelay/1000} secondes...`);
                            await new Promise(resolve => setTimeout(resolve, backoffDelay));
                            return checkStatus(promptId, retryCount + 1, nextBackoffDelay);
                        }
                        throw new Error(`Veuillez réessayer.`);
                    }

                    const contentType = response.headers.get('content-type');
                    if (!contentType || !contentType.includes('application/json')) {
                        throw new Error('La réponse n\'est pas au format JSON');
                    }

                    const data = await response.json();
                    
                    // Vérifier d'abord le statut d'erreur
                    if (data.status === 'error' || data.error) {
                        // Afficher l'erreur immédiatement
                        errorMessage.textContent = data.error || data.message || 'Une erreur est survenue lors de la génération';
                        errorAlert.classList.remove('hidden');
                        submitText.classList.remove('hidden');
                        loadingSpinner.classList.add('hidden');
                        // Arrêter la génération
                        return;
                    }
                    
                    // Traiter les autres statuts
                    if (data.status === 'completed' && data.files) {
                        errorAlert.classList.add('hidden');
                        displayResults(data.files);
                        return;
                    } else if (data.status === 'pending' || data.status === 'processing') {
                        // Vérification automatique toutes les secondes
                        await new Promise(resolve => setTimeout(resolve, 1000));
                        return checkStatus(promptId, retryCount, backoffDelay);
                    }
                } catch (error) {
                    if (retryCount < maxRetries && (error.message.includes('500') || error.message.includes('429'))) {
                        const nextBackoffDelay = Math.min(backoffDelay * 2, maxBackoffDelay);
                        console.log(`Erreur ${error.message}, nouvelle tentative dans ${backoffDelay/1000} secondes...`);
                        await new Promise(resolve => setTimeout(resolve, backoffDelay));
                        return checkStatus(promptId, retryCount + 1, nextBackoffDelay);
                    }
                    console.error('Erreur lors de la vérification du statut:', error);
                    errorMessage.textContent = error.message;
                    errorAlert.classList.remove('hidden');
                    submitText.classList.remove('hidden');
                    loadingSpinner.classList.add('hidden');
                }
            }

            async function displayResults(files) {
                const successSection = document.getElementById('success-section');
                const promptForm = document.getElementById('prompt-form');
                
                if (promptForm) {
                    promptForm.classList.add('hidden');
                }
                
                successSection.classList.remove('hidden');
                currentFiles = files;
            }

        });
    </script>
{% endblock %}